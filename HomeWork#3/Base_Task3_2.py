# 2. Реализовать структуру «Рейтинг», представляющую собой не
# возрастающий набор натуральных чисел
# (каждый элемент ряда меньше или равен предыдущему).

# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.

# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.

# Набор натуральных чисел можно задать непосредственно в коде,
# например, my_list = [7, 5, 3, 3, 2].

class NaturalNums(Exception):
    pass

def ValueCheck():
    try:
        new_el = int(input('Введите новый элемент рейтинга (0 для завершения ввода): '))
        if new_el < 0:
            raise NaturalNums()
    except ValueError:
        print('Введено некорректное значение.')
        exit(0)
    except NaturalNums:
        print('Вводимое значение не может быть отрицательным.')
        exit(0)
    else:
        return new_el


# my_list = [12, 11, 9, 9, 8, 7, 5, 5, 5, 3, 2, 1]
my_list = [12, 7, 3]

flag = True
while flag:
    new_element = ValueCheck()
    if new_element == 0:
        flag = False
    i = len(my_list) - 1
    for el in my_list[::-1]:
        if new_element <= el:
            my_list.insert(i + 1, new_element)
            break
        elif new_element > max(my_list):
            my_list.insert(0, new_element)
            break
        else:
            i -= 1
    print(f'Текущий рейтинг: {my_list}')